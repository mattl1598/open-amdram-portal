$dark: (
	accent1: #cd4a46,
	accent2: #3CB5B9,
	bg0: #1D1D1D,
	bg1: #272727,
	bg2: #3b3b3b,
	bg3: #454545,
	bg4: #585858,
	tooltip-bg: #2b2b2b,
	text: white,
	inv_text: white,
);
$light: (
	accent1: #cd4a46,
	accent2: #3CB5B9,
	bg0: #DEDEDE,
	bg1: #FFFFFF,
	bg2: #DADADA,
	bg3: #C0C0C0,
	bg4: #a4a4a4,
	tooltip-bg: #DEDEDE,
	text: #282828,
	inv_text: white,
);

@mixin theme($element, $colour, $extra_bits: "", $pre_extra_bits: "") {
	@media all and (prefers-color-scheme: light) {
		html.auto &, html.light & {
			#{$element}: #{$pre_extra_bits} colour($light, $colour) #{$extra_bits};
		}
		html.dark & {
			#{$element}: #{$pre_extra_bits} colour($dark, $colour) #{$extra_bits};
		}
	}
	@media all and (prefers-color-scheme: dark) {
		html.auto &, html.dark & {
			#{$element}: #{$pre_extra_bits} colour($dark, $colour) #{$extra_bits};
		}
		html.light & {
			#{$element}: #{$pre_extra_bits} colour($light, $colour) #{$extra_bits};
		}
	}
}

@mixin theme-adjust($element, $colour, $adjust, $arg, $extra_bits: "") {
	@media all and (prefers-color-scheme: light) {
		html.auto &, html.light & {
			#{$element}: call(get-function($adjust), colour($light, $colour), $arg) #{$extra_bits};
		}
		html.dark & {
			#{$element}: call(get-function($adjust), colour($dark, $colour), $arg) #{$extra_bits};
		}
	}
	@media all and (prefers-color-scheme: dark) {
		html.auto &, html.dark & {
			#{$element}: call(get-function($adjust), colour($dark, $colour), $arg) #{$extra_bits};
		}
		html.light & {
			#{$element}: call(get-function($adjust), colour($light, $colour), $arg) #{$extra_bits};
		}
	}
}


@function colour($colours, $name) {
	$response: map-get($colours, $name);

	@if ($response) {
		@return $response;
	}

	@warn #{'Colour "' + $name + '" not found in $colours'};

	@return $response;
}

@mixin has-ancestor($ancestor: "") {
	@at-root {
		#{$ancestor} #{&} {
	        @content;
		}
	}
}

@mixin mobile($ancestor: "") {
	@at-root {
		html.mobile #{$ancestor} #{&} {
	        @content;
		}
	}
}

@mixin not-mobile($ancestor: "") {
	@at-root {
		html:not(.mobile) #{$ancestor} #{&} {
	        @content;
		}
	}
}