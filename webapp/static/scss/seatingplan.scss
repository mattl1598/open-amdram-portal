@import "partials/layout";
@import "partials/m_layout";
@import "partials/variables";
@import "partials/form_element";

div.seating-planner {
	display: grid;
	grid-template-columns: 1fr 20rem;
	grid-template-rows: 6rem 1fr;

	grid-template-areas:
		"header orders"
		"seats orders"
	;
	gap: 1rem;
}

html body#body div.content {
	max-width: 100% !important;
}

div.controls {
	grid-area: header;
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: 1fr;
	gap: 1rem;
	.rows strong {
		cursor: pointer;
	}
}

div.orders {
	grid-area: orders;
	display: flex;
	flex-direction: column;
	gap: .2rem;

	h1, h2, h3, p {
		margin-block-start: 0;
		margin-block-end: 0;
	}

	div.order {
		span.bold {
			font-weight: bold;
		}

		h1, h2, h3, p {
			margin-block-start: 0;
			margin-block-end: 0;
		}

		//padding: 0.25rem;
		border: 2px solid;
		border-radius: .5rem;
		@include theme(border-color, accent1);
		&.seated {
			@include theme(border-color, accent2);

			.num {
				@include theme-adjust(background-color, accent2, rgba, .4);
			}
		}

		display: grid;
		grid-template-columns: 3em 1fr;
		&.has_note {
			grid-template-rows: repeat(3, 1fr);
			grid-template-areas:
				"num name"
				"num seats"
				"num note"
			;
			.seats {
				padding-bottom: 0;
			}
		}
		&:not(.has_note) {
			grid-template-rows: repeat(2, 1fr);
			grid-template-areas:
				"num name"
				"num seats"
			;
			.note {
				display: none;
			}
		}
		gap: .25rem .5rem;

		.num {
			grid-area: num;
			align-self: stretch;
			justify-self: stretch;
			text-align: center;

			display: flex;
			align-items: center;
			justify-content: center;

			cursor: grab;

			span {
				align-self: center;
				justify-items: center;
			}

			@include theme-adjust(background-color, accent1, rgba, .4);
		}
		.name {
			grid-area: name;
			padding-top: .2rem;
		}
		.seats {
			grid-area: seats;
			padding-bottom: .2rem;
		}
		.note {
			grid-area: note;
			padding-bottom: .2rem;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}
	}
}



div.seats-container {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: center;
	gap: .5rem;
	grid-area: seats;
}

div.row {
	display: grid;
	//flex-direction: row;
	//align-items: center;
	//justify-content: space-evenly;
	grid-template-columns: repeat(12, 1fr);
	grid-template-rows: 1fr;
	//gap: .5rem;
}

div.seat {
	margin: 0 .25rem;
	text-align: center;
	width: 5rem;
	height: 5rem;
	display: grid;
	grid-template-columns: 4rem 1rem;
	grid-template-rows: 1fr 1.2rem;
	grid-template-areas:
		"name name"
		"seat x"
	;

	&.join-left {
		margin-left: -1px;
		padding-left: calc(.25rem + 2px);
		border-left: 0 !important;
		border-bottom-left-radius: 0 !important;
		&.assigned .seatNum {
			border-bottom-left-radius: 0 !important;
			//@include theme-adjust(box-shadow, bg2, rgba, 1%, calc(-.25rem + -2px) 0);
		}
	}

	&.join-right {
		margin-right: -1px;
		padding-right: calc(.25rem + 2px);
		border-right: 0 !important;
		border-bottom-right-radius: 0 !important;

		&.assigned .seatNum {
			border-bottom-right-radius: 0 !important;
		}
		&.assigned:not(:has(+ .aisle)) .bg {
			width: calc(.5rem + 2px);
			grid-area: 2 / 3 / 3 / 4;
			@include theme-adjust(background-color, bg2, rgba, 1%);
		}
	}

	.join-right + &.aisle, &.aisle:has(+ .join-left) {
		border-width: 1px 0;
		border-style: dashed;
		@include theme(border-color, text);
		margin: 0;
		padding: 0 .25rem;
	}

	&.aisle {
		//grid-column: span 2;
	}

	&:not(.nonexistent) {
		border: 1px solid;
		@include theme(border-color, text);
		border-bottom-left-radius: .7rem;
		border-bottom-right-radius: .7rem;
	}

	.name {
		grid-area: name;
		align-self: flex-end;
	}

	.seatNum {
		grid-area: 2 / 1 / 3 / -1;
	}

	&.assigned .seatNum {
		border-bottom-left-radius: .7rem;
		border-bottom-right-radius: .7rem;
		@include theme-adjust(background-color, bg2, rgba, 1%);
		cursor: grab;
	}

	&.assigned .remove {
		align-self: flex-end;
		justify-self: center;
		padding-right: .3rem;
		font-size: 1.5rem;
		margin: -.2rem 0;

		cursor: pointer;

		grid-area: x;
	}

	&:not(.assigned) .remove {
		display: none;
	}
}