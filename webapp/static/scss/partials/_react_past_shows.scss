@import "variables";

div.ruler {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;

	div {
		width: 1rem;
		height: 1rem;

		&:nth-child(2n) {
			background-color: black;
		}
		&:nth-child(2n+1) {
			background-color: white;
		}
		&:nth-child(5n+1) {
			background-color: red !important;
		}
	}
}

div.filtering {
	margin-block: .5rem;
	display: grid;
	grid-template-rows: 2.3835rem auto 0fr min-content;
	grid-template-columns: 1fr 1fr auto ;

	column-gap: .5rem;
	row-gap: .5rem;

	&:has(div.filters:empty) {
		row-gap: .25rem;
	}

	transition: grid-template-rows .5s ease-in-out;

	&:not(.show_filter_menu) div.filter_menu {
		border-width: 0;
	}

	&.show_filter_menu {
		grid-template-rows: 2.3835rem auto 1fr min-content;
	}

	> div {
		flex-grow: 1;
		border: 2px solid;
		border-radius: .5rem;

		display: flex;
		flex-direction: row;
		align-items: center;

		&:not(.search):not(.filter_menu) {
			text-overflow: ellipsis;
		    white-space: nowrap;
		    overflow: clip !important;
			min-width: 2.25rem;
		}

		> span {
			padding-right: .5rem;
		}

		> label {
			display: flex;
			flex-direction: row;
			align-items: center;
		}

		&:nth-child(2n-1) {
			@include theme-adjust(background-color, accent1, rgba, .4);
			@include theme(border-color, accent1);
		}
		&:nth-child(2n) {
			@include theme-adjust(background-color, accent2, rgba, .4);
			@include theme(border-color, accent2);
		}
	}

	div.filter {
		grid-area: 1 / 1 / 2 / 2;
		cursor: pointer;
		overflow: hidden;
		//transform: translateZ(0);
		span {
			overflow: hidden;
		}
	}

	div.filters {
		grid-area: 2 / 1 / 3 / 4;
		background-color: transparent !important;
		border: none;
		display: flex;
		align-items: center;
		flex-wrap: wrap;
		gap: .5rem;
		> div {
			display: flex;
			align-items: center;
			background-color: grey;
			max-height: 1.5rem;
			border-radius: .25rem;
			padding: .25rem .5rem;
			gap: .25rem;
			cursor: pointer;
			&::after {
				content: "Ã—";
				transform: scale(1.5);
				transform-origin: 0 53%;
			}

			&.member:not(:empty)::before {
				content: "Member: "
			}
			&.genre:not(:empty)::before {
				content: "Genre: "
			}
			&.season:not(:empty)::before {
				content: "Season: "
			}
			&.year:not(:empty)::before {
				content: "Years: "
			}
		}
	}

	div.sort {
		grid-area: 1 / 2 / 2 / 3;
		label {
			flex-grow: 1;
			flex-shrink: 1;
			cursor: pointer;
			overflow: hidden;
		}
		select {
			overflow: hidden;
			cursor: pointer;
			appearance: none;
			-webkit-appearance: initial;
			-moz-appearance: initial;
			outline: none;
			background-color: transparent;
			border: none;
			font: inherit;
			color: inherit;
			margin: 0;
			padding: 0;
			option {
				@include theme(background-color, bg2);
			}

		}
	}

	div.search {
		grid-area: 1 / 3 / 2 / 4;
		display: grid;
		grid-template-rows: 1fr;
		grid-template-columns: min-content 1fr;
		transition: grid-template-columns 1s ease;

		> svg.icon {
			grid-area: 1 / 1 / 2 / 2;
		}
		&:has(div.searchbox.false) {
			grid-template-columns: min-content 0fr;
		}

		svg.icon {
			width: 1.25rem;
			padding-left: .25rem;
			padding-right: .5rem;

			&.cross {
				stroke-width: 8;
				@include mobile {
					stroke-width: 6;
				}
			}

			@include mobile {
				width: .75rem;
				padding-left: .0625rem;
				padding-right: .125rem;
			}
		}

		div.searchbox {
			grid-area: 1 / 2 / 2 / 3;
			overflow: hidden;
			display: flex;
			flex-direction: row;
			align-items: center;
			input {
				height: 1.75rem;
				min-width: 5rem;
				max-width: 50rem;
				flex-grow: 1;
				flex-shrink: 1;
				@include mobile {
					font-size: 1.2rem;
					padding: 0;
				}
				@include not-mobile {
					font-size: 1.5rem;
					padding: 0;
				}

				&::-webkit-search-decoration {
					-webkit-appearance: none;
				}
			}
		}
	}

	div.filter_menu {
		grid-area: 3 / 1 / 4 / 4;
		overflow: hidden;
		transition: border-width .5s ease-in-out;

		&:has(div.ts-wrapper.focus) {
			overflow: visible;
		}

		ul {
			width: 100%;
			gap: 0.5rem;

			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: center;
			align-items: flex-start;

			padding: 1rem;
			@include mobile {
				padding: .375rem;
			}
			margin-block-start: 0;
			margin-block-end: 0;

			li {
				flex-grow: 10;
				flex-shrink: 10;
				min-width: 5rem;
				width: 15rem;
				max-width: 30rem;
				list-style: none;
			}
		}

		div.ts-wrapper.focus {
			z-index: 20;
		}

		div.range {
			input.lower {
				direction: rtl;
			}
		}
	}

	div.resultsCount {
		grid-area: 4 / 1 / 5 / 4;
		justify-content: center;
		background-color: transparent !important;
		border: none;
		text-align: center;
	}

	svg.icon {
		display: block;
		min-width: 2rem;
		width: 2rem;
		padding: .125rem;
		@include theme(fill, text);
		@include theme(stroke, text);
		cursor: pointer;
	}
}

.past_shows_title {
	display: flex;
	flex-direction: row;
	//align-items: center;
	justify-content: space-between;
	margin: 1.5ch 0;
	flex-wrap: wrap;
	gap: 0.7rem;

	h2 {
		margin: 0;
	}

	.quick-search {
		margin: 0 1%;
		padding: 0.5rem 0.5rem 0;
		flex-grow: 10;
		min-width: 80%;
	}

	.cards_switch {
		display: flex;
		gap: 1ch;
		align-items: center;
		padding: 0.3ch;

		.switch {
			font-size: 150%;
		}
	}

	button {
		padding: 0.7ch;
		border: 2px solid;
		@include theme(border-color, accent2);
		border-radius: 1ch;

		@include theme(background-color, bg3);
		@include theme(color, text);

		&:hover {
			cursor: pointer;
			@include theme-adjust(box-shadow, accent2, rgba, .37, inset 0 0 0 1000ch);
		}
	}
}


//, table:not([class])
div#past_shows {
	&.cards_mode {
		flex-direction: row;
		&.reverse {
			flex-direction: row-reverse;
			flex-wrap: wrap-reverse;
		}
	}
	&.table_mode {
		flex-direction: column;
		&.reverse {
			flex-direction: column-reverse;
		}
	}

	max-width: 100%;
	overflow: hidden;

	h3 {
		margin: 0;
	}

	tr th:nth-child(1),
	tr td:nth-child(1) {
		display: none;
	}

	border-collapse: collapse;

	tr {
		cursor: pointer;
		transition: box-shadow 150ms ease-in-out;
		&:hover {
			box-shadow: inset 0 0 0 1000ch #3CB5B960;
		}
		padding-bottom: 0.5ch;
	}
}

@include mobile {
	body {
		overflow-x: scroll;
	}
}

:is(table.table_mode, div.table_mode) {
	width: 100%;
	height: auto;

	img.programme {
		@include not-mobile {
			height: 5rem;
		}
		width: 5rem;
		object-fit: cover;
		vertical-align: middle;
	}

	:is(a,  div.header) {
		display: grid;
		gap: .5rem;
		grid-template-rows: 1fr;
		grid-template-columns: 5rem repeat(5, 1fr);
		&.header {
			.image {
				grid-area: 1 / 1 / 1 / 1;
			}
			.show_title {
				grid-area: 1 / 1 / 2 / 3;
			}
		}

		@include mobile {
			grid-template-areas:
				"image title title season genre"
				"image cast cast crew crew"
			;
			grid-template-rows: 1fr 1fr;
			grid-template-columns: 5rem  repeat(4, 1fr);
			&.header {
				.image {
					grid-area: 1 / 1 / 1 / 1;
				}
				.show_title {
					grid-area: 1 / 1 / 2 / 4;
				}
			}
			.image {
				grid-area: image;
				text-align: left;
				place-self: center start;
				width: 5rem;
				overflow: hidden;
			}
			.show_title { grid-area: title;	}
			.season { grid-area: season; }
			.genre { grid-area: genre; }
			.cast { grid-area: cast; }
			.crew {	grid-area: crew; }
			div:not(.image) { text-align: center; }
		}


		&.header {
			@include theme(background-color, bg2);
			text-align: center;
		}

		height: fit-content;
	}

	td, div {
		//padding: 0 1ch;
		margin: auto 0;
	}

	tr:nth-child(2n), a:nth-child(2n) {
		@include theme(background-color, bg3);
		&:hover {
			@include theme-adjust(box-shadow, accent1, rgba, .37, inset 0 0 0 1000ch);
		}
	}
	tr:nth-child(2n+1), a:nth-child(2n+1) {
		@include theme(background-color, bg2);
		&:hover {
			@include theme-adjust(box-shadow, accent2, rgba, .37, inset 0 0 0 1000ch);
		}
	}

	span.card-subtitle {
		display: none;
	}

	th span {
		display: none;

		&.desc {
			display: inline-block;
			&#season_arrow {
				transform: rotate(180deg);
			}
		}

		&.asc {
			display: inline-block;
			transform: rotate(180deg);
			&#season_arrow {
				transform: rotate(360deg);
			}
		}
	}
}

@include mobile {
	table.cards_mode, div.cards_mode {
		tr, a.link {
			flex: 1 1 9rem;
		}
	}
}
@include not-mobile {
	table.cards_mode, div.cards_mode {
		tr, a.link {
			flex: 1 1 15rem;
		}
	}
}

:is(table.cards_mode, div.cards_mode) {
	width: 100%;
	tr:nth-child(1) {
		display: none;
	}

	.header {
		display: none;
	}

	tbody, &:not(table).cards_mode {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: space-evenly;
		gap: .5rem;
		vertical-align: baseline;

		@include mobile {
			gap: .25rem;
		}
	}

	tr, a.link {
		text-decoration: none;
		box-sizing: border-box;

		border-radius: 1.5rem;
		border-spacing: 0;
		cursor: pointer;

		&:nth-child(2n) {
			border: 3px solid;
			@include theme(border-color, accent1);
			@include theme(background-color, bg3);
			&:hover > * {
				@include theme-adjust(box-shadow, accent1, rgba, .37, inset 0 0 0 1000ch);
			}
		}
		&:nth-child(2n+1) {
			border: 3px solid;
			@include theme(border-color, accent2);
			@include theme(background-color, bg2);
			&:hover > * {
				@include theme-adjust(box-shadow, accent2, rgba, .37, inset 0 0 0 1000ch);
			}
		}

		display: flex;
		flex-direction: column;

		max-width: 17.5rem;
		word-wrap: normal;
		overflow: hidden;

		td, div {
			text-align: center;
			background-color: inherit;

			&.title {
				flex-grow: 4;
				display: flex;
				flex-direction: column;
				justify-content: center;
			}
		}
		div.image {
			width: 100%;
			overflow: hidden;
		}

		img.programme {
			max-width: 100%;
			aspect-ratio: 1/sqrt(2);
			object-fit: contain;
		}

		div.genre {
			flex-grow: 10;
		}

		span.card-subtitle {
			//overflow: hidden;
			//text-align: center;
			//white-space: nowrap;
			font-weight: bold;
			padding: 0 0.8ch;

			display: flex;
			flex-direction: row;
			justify-content: space-evenly;
			gap: 1ch;

			hr {
				flex-grow: 1;
				display: inline-block;
				vertical-align: bottom;
			}
			&:not(:first-child) {
				display: none;
			}
		}
	}
}

